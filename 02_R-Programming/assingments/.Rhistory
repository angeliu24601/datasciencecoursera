source("pollutantmean.R")
source("corr.R")
?round()
ans1 <- round(pollutantmean("specdata", "sulfate", 1:10), 3)
ans2 <- round(pollutantmean("specdata", "nitrate", 70:72), 3)
ans3 <- round(pollutantmean("specdata", "sulfate", 34), 3)
ans4 <- round(pollutantmean("specdata", "nitrate"), 3)
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
ans5 <- print(cc$nobs)
cc <- complete("specdata", 54)
ans6 <- print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
ans7< - print(cc[use, "nobs"])
ans7 <- print(cc[use, "nobs"])
sample(332, 10)
sample(332, 10)
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
ans8 <- print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
ans9 <- print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
ans10 <- print(c(n, round(cr, 4)))
rm(list=ls())
set.seed(1)
rpois(5, 2)
?rnorm
?rpois
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
?Rprof
summaryRprof()
rm(list=ls())
setwd("./pa3")
temp <- tempfile()
download.file(URL,temp, method = "curl")
unzip (temp,exdir = "./")
download.file(URL,temp, method = "curl")
temp <- tempfile()
download.file(url,temp, method = "curl")
url <- "https://eventing.coursera.org/api/redirectStrict/bGn6iE9bkvaesfUf2zvVWul71VhmkhKvxAP_eJ7E2RigBK60UfeB0q9j__UwZDT1tyuCpOsP5OlWjQhctHtueA.A3kCK36hZvbcbssJEA_TTQ.KX3lUENPALakYDR8Znr6sAAahLfLazCSglvjb9oBpdvbV4lMfuvqHTgdLOaQLjpJuWanFhsTfQzZrlXQDp2XBywK3CCqrw5F_53bFQnC9Ikfo1UN5r7n2BWGmIcQnge5x5DhsTJD8Lyj6FL9Bd4xVLztxRqlQuiLbe_ke3Ey-fVkyxukdIFXWyipXBoM0o-rOI_rXFvkb4Ykow5GogvGFBhW4DCrTnCWlzXWMINkBHL27k9p-C50Wv31QtONSLXkBXUWkcNu6MsyGDOBzqMKlTd0YXigY373KtMgmFXwnO7l3-N06G7kD708tPJ82yG71kDLxNz8kB8mMktNDRSc49cKacP1cGPxMlJ9iMoGs202vZXPpDfKG9GnJv1Nd92Fw1Jbutq1nrEwGjEN0jE6oYnMGtlHNskKNHmAZ_1LG_E"
download.file(url,temp, method = "curl")
unzip (temp,exdir = "./")
download.file(url,temp)
rm(temp, url)
outcome <- read.csv("./rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
outcome <- read.csv("./rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character", na.strings="Not Available")
View(outcome)
rm(outcome)
measure <- read.csv("./rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character", na.strings="Not Available")
source(best.R);source(rankall.R);source(rankhospital.R)
source("best.R");source("rankall.R");source("rankhospital.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
rankhospital("MD", "heart failure", 5)
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankhospital("TX", "heart failure", 4)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
View(measure)
rankhospital("TX", "heart failure", 4) ## check
source("rankall.R")
rankhospital("TX", "heart failure", 4) ## check
names(measure)[c(11,17,23)] <- c("heart attack","heart failure","pneumonia")
View(measure)
measure$Hospital.Name <- as.character(measure$Hospital.Name)
measure.state <- measure[measure$State=="TX",]
colnum <- which(names(measure)=="heart failure")
measure.outcome <- measure.state[order(measure.state[,colnum],measure.state$Hospital.Name),]
View(measure.outcome)
View(measure.state)
class(measure.outcome$`heart failure`)
class(measure[,17])
measure <- read.csv("./rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
na.strings="Not Available")
class(measure[,17])
rankhospital("TX", "heart failure", 4) ## check
tail(rankall("pneumonia", "worst"), 3) ## check
rm(list=ls())
measure <- read.csv("./rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
na.strings="Not Available")
source("best.R");source("rankall.R");source("rankhospital.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
rankhospital("MD", "heart failure", 5)
rankhospital("TX", "heart failure", 4) ## check
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10) ## check
tail(rankall("pneumonia", "worst"), 3) ## check
class(measure[,23])
which.max()
?which.max
onemeasure <- measure[which(measure$State=="WV")]
onemeasure <- measure[which(measure$State=="WV"),]
which.max(onemeasure, 23)
which.max(onemeasure[,23])
count(onemeasure[,23])
(onemeasure[,23])
norw(onemeasure[,23])
norws(onemeasure[,23])
nrow(onemeasure[,23])
length(onemeasure[,23])
View(onemeasure)
onemeasure[52,c[2,7]]
onemeasure[52,2]
onemeasure[52,c(2,7)]
tail(rankall("pneumonia", "worst"), 3) ## check
rm(onemeasure)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3) ## check
tail(rankall("heart failure"), 10) ## check
measure$State
unique(measure$State)
which(names(measure) == "pneumonia")
which.max(measure[measure$State=="WV", 23])
rankall("pneumonia", "worst")
source("rankall.R")
rankall("pneumonia", "worst")
onemeasure <- measure[measure$State=="DC"]
onemeasure <- measure[measure$State=="DC",]
num <- which.max(onemeasure[,23])
hospital <- onemeasure[num,c(2,7)]
View(hospital)
?length()
?order
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3) ## check
onemeasure <- measure[measure$State == "DC" & !is.na(measure[,23]),]
length(onemeasure)
View(onemeasure)
length(onemeasure[,23])
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3) ## check
rm(hospital)
rm(onemeasure)
rm(num)
View(measure)
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3) ## check
tail(rankall("heart failure"), 10)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3) ## check
?order
?sort
onemeasure <- measure[measure$state == "DC" & !is.na(measure[,23]),]
onemeasure <- measure[measure$state == "DC" & which(!is.na(measure[,23])),]
onemeasure <- measure[measure$state == "DC" & is.na(measure[,23]),]
onemeasure <- measure[measure$state == "DC" & is.na(measure[,23]) == FALSE,]
onemeasure <- measure[measure$state == "DC",]
onemeasure <- measure[measure$State == "DC" & !is.na(measure[,23]),]
View(onemeasure)
onemeasure <- onemeasure[order(onemeasure[,23], onemeasure$hospital),]
View(onemeasure)
onemeasure <- onemeasure[order(onemeasure[,23], onemeasure$Hospital.Name),]
length(onemeasure[,23])
rm(onemeasure)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3) ## check
source("best.R");source("rankall.R");source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
tail(rankall("pneumonia", "worst"), 3) ## check
rankall("pneumonia", "worst")
measure <- read.csv("./rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
na.strings="Not Available")
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3) ## check
names(measure)[c(2,7,11,17,23)] <- c("hospital","state","heart attack",
"heart failure","pneumonia")
measure$hospital <- as.character(measure$hospital)
colnum <- which(names(measure)==outcome)
colnum <- which(names(measure)=="pneumonia")
measure <- measure[order(measure$state),]
for (i in unique(measure$state)) {
## Subset the data by each state
onemeasure <- measure[measure$state == i & !is.na(measure[,colnum]),]
## Order by outcome, hospital
onemeasure <- onemeasure[order(onemeasure[,colnum], onemeasure$hospital),]
## Specify what happens when "num" is "best", "worst",
## or > the number of hospitals in the given state
if (num == "best") {num = 1}
if (num == "worst") {num <- length(onemeasure[,colnum])}
if (num > length(onemeasure[,colnum])) {
hospital <- data.frame("hospital"="NA","state"=i)}
else {hospital <- onemeasure[num,c(2,7)]}
hospitals <- rbind (hospitals,hospital)
}
num <- "worst"
for (i in unique(measure$state)) {
## Subset the data by each state
onemeasure <- measure[measure$state == i & !is.na(measure[,colnum]),]
## Order by outcome, hospital
onemeasure <- onemeasure[order(onemeasure[,colnum], onemeasure$hospital),]
## Specify what happens when "num" is "best", "worst",
## or > the number of hospitals in the given state
if (num == "best") {num = 1}
if (num == "worst") {num <- length(onemeasure[,colnum])}
if (num > length(onemeasure[,colnum])) {
hospital <- data.frame("hospital"="NA","state"=i)}
else {hospital <- onemeasure[num,c(2,7)]}
hospitals <- rbind (hospitals,hospital)
}
hospitals <- data.frame("hospital"=character(), "state"=factor())
for (i in unique(measure$state)) {
## Subset the data by each state
onemeasure <- measure[measure$state == i & !is.na(measure[,colnum]),]
## Order by outcome, hospital
onemeasure <- onemeasure[order(onemeasure[,colnum], onemeasure$hospital),]
## Specify what happens when "num" is "best", "worst",
## or > the number of hospitals in the given state
if (num == "best") {num = 1}
if (num == "worst") {num <- length(onemeasure[,colnum])}
if (num > length(onemeasure[,colnum])) {
hospital <- data.frame("hospital"="NA","state"=i)}
else {hospital <- onemeasure[num,c(2,7)]}
hospitals <- rbind (hospitals,hospital)
}
View(hospitals)
View(onemeasure)
length(onemeasure[,colnum])
View(hospital)
which.max(onemeasure[,colnum])
measure <- read.csv("./rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
na.strings="Not Available")
names(measure)[c(2,7,11,17,23)] <- c("hospital","state","heart attack",
"heart failure","pneumonia")
## Change the class of the variable "hospital" from factor to character
measure$hospital <- as.character(measure$hospital)
colnum <- which(names(measure)=="pneumonia")
measure <- measure[order(measure$state),]
hospitals <- data.frame("hospital"=character(), "state"=factor())
for (i in unique(measure$state)) {
## Subset the data by each state
onemeasure <- measure[measure$state == i & !is.na(measure[,colnum]),]
## Order by outcome, hospital
onemeasure <- onemeasure[order(onemeasure[,colnum], onemeasure$hospital),]
## Specify what happens when "num" is "best", "worst",
## or > the number of hospitals in the given state
if (num == "best") {num = 1}
if (num == "worst") {num <- which.max(onemeasure[,colnum])}
if (num > which.max(onemeasure[,colnum])) {
hospital <- data.frame("hospital"="NA","state"=i)}
else {hospital <- onemeasure[num,c(2,7)]}
hospitals <- rbind (hospitals,hospital)
}
View(hospital)
which.max(measure[measure$state=="WV",23])
which.max(measure[measure$state=="WY",23])
onemeasure <- measure[measure$state == "WV" & !is.na(measure[,colnum]),]
onemeasure <- onemeasure[order(onemeasure[,colnum], onemeasure$hospital),]
num <- "worst"
hospital <- onemeasure[num,c(2,7)]
View(hospital)
num <- which.max(onemeasure[,colnum]
num <- which.max(onemeasure[,colnum])
num <- which.max(onemeasure[,colnum])
levels(measure$state)
measure <- read.csv("./rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
na.strings="Not Available")
names(measure)[c(2,7,11,17,23)] <- c("hospital","state","heart attack",
"heart failure","pneumonia")
measure$hospital <- as.character(measure$hospital)
colnum <- which(names(measure)=="pneumonia")
measure <- measure[order(measure$state),]
hospitals <- data.frame("hospital"=character(), "state"=factor())
num <- "worst"
for (i in levels(measure$state)) {
## Subset the data by each state
onemeasure <- measure[measure$state == i & !is.na(measure[,colnum]),]
## Order by outcome, hospital
onemeasure <- onemeasure[order(onemeasure[,colnum], onemeasure$hospital),]
## Specify what happens when "num" is "best", "worst",
## or > the number of hospitals in the given state
if (num == "best") {num1 = 1}
if (num == "worst") {num1 <- which.max(onemeasure[,colnum])}
if (num > which.max(onemeasure[,colnum])) {
hospital <- data.frame("hospital"="NA","state"=i)}
else {hospital <- onemeasure[num1,c(2,7)]}
hospitals <- rbind (hospitals,hospital)
}
View(hospital)
View(onemeasure)
View(hospitals)
View(onemeasure)
View(hospitals)
hospital <- onemeasure[num1,c(2,7)]
View(hospital)
View(hospitals)
for (i in levels(measure$state)) {
## Subset the data by each state
onemeasure <- measure[measure$state == i & !is.na(measure[,colnum]),]
## Order by outcome, hospital
onemeasure <- onemeasure[order(onemeasure[,colnum], onemeasure$hospital),]
## Specify what happens when "num" is "best", "worst",
## or > the number of hospitals in the given state
if (num == "best") {num1 = 1
hostpial <- onemeasure[num1, c(2,7)]}
if (num == "worst") {num1 <- which.max(onemeasure[,colnum])
hostpial <- onemeasure[num1, c(2,7)]}
if (num > which.max(onemeasure[,colnum])) {
hospital <- data.frame("hospital"="NA","state"=i)}
hospitals <- rbind (hospitals,hospital)
}
View(hospitals)
hospitals <- data.frame("hospital"=character(), "state"=factor())
for (i in levels(measure$state)) {
## Subset the data by each state
onemeasure <- measure[measure$state == i & !is.na(measure[,colnum]),]
## Order by outcome, hospital
onemeasure <- onemeasure[order(onemeasure[,colnum], onemeasure$hospital),]
## Specify what happens when "num" is "best", "worst",
## or > the number of hospitals in the given state
if (num == "best") {num1 = 1
hostpial <- onemeasure[num1, c(2,7)]}
if (num == "worst") {num1 <- which.max(onemeasure[,colnum])
hostpial <- onemeasure[num1, c(2,7)]}
if (num > which.max(onemeasure[,colnum])) {
hospital <- data.frame("hospital"="NA","state"=i)}
hospitals <- rbind (hospitals,hospital)
}
View(hospital)
hospitals <- data.frame("hospital"=character(), "state"=factor())
for (i in levels(measure$state)) {
## Subset the data by each state
onemeasure <- measure[measure$state == i & !is.na(measure[,colnum]),]
## Order by outcome, hospital
onemeasure <- onemeasure[order(onemeasure[,colnum], onemeasure$hospital),]
## Specify what happens when "num" is "best", "worst",
## or > the number of hospitals in the given state
if (num == "best") {num1 = 1
hospital <- onemeasure[num1, c(2,7)]}
if (num == "worst") {num1 <- which.max(onemeasure[,colnum])
hospital <- onemeasure[num1, c(2,7)]}
if (num > which.max(onemeasure[,colnum])) {
hospital <- data.frame("hospital"="NA","state"=i)}
hospitals <- rbind (hospitals,hospital)
}
View(hospitals)
View(onemeasure)
hospitals <- data.frame("hospital"=character(), "state"=factor())
for (i in levels(measure$state)) {
## Subset the data by each state
onemeasure <- measure[measure$state == i & !is.na(measure[,colnum]),]
## Order by outcome, hospital
onemeasure <- onemeasure[order(onemeasure[,colnum], onemeasure$hospital),]
## Specify what happens when "num" is "best", "worst",
## or > the number of hospitals in the given state
if (num == "best") {num1 = 1
hospital <- onemeasure[num1, c(2,7)]}
if (num == "worst") {num1 <- length(onemeasure[,colnum])
hospital <- onemeasure[num1, c(2,7)]}
if (num > length(onemeasure[,colnum])) {
hospital <- data.frame("hospital"="NA","state"=i)}
hospitals <- rbind (hospitals,hospital)
}
rm(hostpial)
View(onemeasure)
View(hospital)
num <- "best"
hospitals <- data.frame("hospital"=character(), "state"=factor())
for (i in levels(measure$state)) {
## Subset the data by each state
onemeasure <- measure[measure$state == i & !is.na(measure[,colnum]),]
## Order by outcome, hospital
onemeasure <- onemeasure[order(onemeasure[,colnum], onemeasure$hospital),]
## Specify what happens when "num" is "best", "worst",
## or > the number of hospitals in the given state
if (num == "best") {num1 = 1
hospital <- onemeasure[num1, c(2,7)]}
if (num == "worst") {num1 <- length(onemeasure[,colnum])
hospital <- onemeasure[num1, c(2,7)]}
if (num > length(onemeasure[,colnum])) {
hospital <- data.frame("hospital"="NA","state"=i)}
hospitals <- rbind (hospitals,hospital)
}
View(hospital)
View(hospitals)
hospitals <- data.frame("hospital"=character(), "state"=factor())
for (i in levels(measure$state)) {
## Subset the data by each state
onemeasure <- measure[measure$state == i & !is.na(measure[,colnum]),]
## Order by outcome, hospital
onemeasure <- onemeasure[order(onemeasure[,colnum], onemeasure$hospital),]
## Specify what happens when "num" is "best", "worst",
## or > the number of hospitals in the given state
if (num == "best") {num1 = 1
hospital1 <- onemeasure[num1, c(2,7)]}
if (num == "worst") {num1 <- length(onemeasure[,colnum])
hospital2 <- onemeasure[num1, c(2,7)]}
if (num > length(onemeasure[,colnum])) {
hospital3 <- data.frame("hospital"="NA","state"=i)}
hospitals <- rbind (hospitals,hospital)
}
View(hospital3)
rm(list=ls())
measure <- read.csv("./rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
na.strings="Not Available")
source("rankall.R")
rankhospital("MD", "heart attack", "worst")
tail(rankall("pneumonia", "worst"), 3) ## check
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3) ## check
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3) ## check
rm(rankall)
source("rankall.R")
measure <- read.csv("./rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
na.strings="Not Available")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3) ## check
tail(rankall("heart failure"), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3) ## check
tail(rankall("heart failure"), 10)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3) ## check
tail(rankall("pneumonia", "worst"), 3) ## check
source("best.R");source("rankall.R");source("rankhospital.R")
tail(rankall("pneumonia", "worst"), 3) ## check
rm(list=ls())
source("rankall.R")
measure <- read.csv("./rprog-data-ProgAssignment3-data/outcome-of-care-measures.csv",
na.strings="Not Available")
tail(rankall("pneumonia", "worst"), 3) ## check
head(rankall("heart attack", 20), 10)
source("best.R");source("rankall.R");source("rankhospital.R")
tail(rankall("pneumonia", "worst"), 3) ## check
source("best.R");source("rankall.R");source("rankhospital.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3) ## check
source("best.R");source("rankall.R");source("rankhospital.R")
setwd("./pa3")
source("best.R");source("rankall.R");source("rankhospital.R")
tail(rankall("pneumonia", "worst"), 3) ## check
source("best.R");source("rankall.R");source("rankhospital.R")
tail(rankall("pneumonia", "worst"), 3) ## check
head(rankall("heart attack", 20), 10)
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
rm(list=ls())
x <- c(1,3, 5); y <- c(3, 2, 10); ans <- rbind(x, y)
length(ans); dim(ans); class(ans)
x <- list(2, "a", "b", TRUE)
x[[1]]; class(x[[1]]); length(x[[1]])
x[[2]]; class(x[[2]]); length(x[[2]])
x <- 1:4; y <- 2; x + y; class(x + y)
x <- 1:4; y <- 2; x + y; class(x + y)
x <- c(3, 5, 1, 10, 12, 6)
x[x < 10] == 0 # no
x[x> 6] <- 0 # no
setwd("./hw")
hw1 <- read.csv("./hw1_data.csv")
colnames(hw1)
head(hw1,2)
tail(hw1,2)
nrow(hw1)
tail(hw1,2)
sum(is.na(hw1$Ozone))
hw1$Ozone[47]
sum(is.na(hw1$Ozone))
mean(hw1$Ozone, na.rm = TRUE)
mean(hw1[hw1$Ozone > 31 & hw1$Temp >90,]$Solar.R, na.rm = TRUE)
mean(hw1[hw1$Month == 6,]$Temp, na.rm = TRUE)
max(hw1[hw1$Month == 5,]$Ozone, na.rm = TRUE)
rm(list=ls())
