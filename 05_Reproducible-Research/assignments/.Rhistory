setwd("./pa1")
file.exists("./activity")
setwd("./pa1")
if (file.exists("./activity.csv") = FALSE) {
URL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
temp <- tempfile()
download.file(URL,temp, method = "curl")
unzip (temp)
rm(temp, URL)
}
if (file.exists("./activity.csv") = FALSE) {
URL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
temp <- tempfile()
download.file(URL,temp, method = "curl")
unzip (temp)
rm(temp, URL)}
rm(list=ls())
file.exists(("./activity.csv"))
if (file.exists("./activity.csv")) {
URL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
temp <- tempfile()
download.file(URL,temp, method = "curl")
unzip (temp)
rm(temp, URL)}
if (!file.exists("./activity.csv")) {
URL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
temp <- tempfile()
download.file(URL,temp, method = "curl")
unzip (temp)
rm(temp, URL)}
activity <- read.csv("./activity.csv")
getwd() != "/pa1"
getwd()
install.packages("ggplot2")
View(activity)
library(knitr)
# Chunk 1
if (!file.exists("./activity.csv")) {
URL <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
temp <- tempfile()
download.file(URL,temp, method = "curl")
unzip (temp)
rm(temp, URL)}
# Chunk 2
activity <- read.csv("./activity.csv")
# Chunk 3
stepsperday <- aggregate(activity$steps,
by=list(activity$date), FUN = sum, na.rm = TRUE)
colnames(stepsperday) <- c("date","daysteps")
# Chunk 4
library(ggplot2)
hist <- qplot(daysteps,data=stepsperday) +
xlab("steps taken each day") + ylab("count of days") +
ggtitle("Histogram of Steps Taken Daily with Missing Values")
print(hist)
# Chunk 5
stepsperday_mean <- sum(stepsperday$daysteps)/length(stepsperday$date)
stepsperday_median <- median(stepsperday$daysteps)
print(stepsperday_mean)
print(stepsperday_median)
# Chunk 6
avg_steps_interval <- aggregate (activity$steps,by =
list(activity$interval),
FUN = mean, na.rm = TRUE)
colnames(avg_steps_interval) <- c("interval","avg_steps")
# Chunk 7
with(avg_steps_interval, plot(interval,avg_steps,type="l", xlab="Intervals",
ylab="Average Steps Taken"))
# Chunk 8
max_avg_steps_interval <- avg_steps_interval[which.max(avg_steps_interval$avg_steps),1]
print(max_avg_steps_interval)
# Chunk 9
NA_count <- sum(is.na(activity$steps))
print(NA_count)
# Chunk 10
activity_NA <- activity[is.na(activity$steps),]
activity_NNA <- activity[is.na(activity$steps)==FALSE,]
# Chunk 11
activity_NA_filled <- merge(activity_NA, avg_steps_interval,
by="interval")[,c(4,3,1)]
colnames(activity_NA_filled) <- c("steps","date","interval")
# Chunk 12
activity_new <- rbind(activity_NA_filled, activity_NNA)
# Chunk 13
stepsperday_new <- aggregate(activity_new$steps, by = list(activity$date),
FUN = sum, na.rm = TRUE)
colnames(stepsperday_new) <- c("date","daysteps")
# Chunk 14
hist_new <- qplot(daysteps,data=stepsperday_new) +
xlab("steps taken each day")+ylab("count of days") +
ggtitle("Histogram of Steps Taken Daily with Missing Values Filled")
print(hist_new)
# Chunk 15
stepsperday_mean_new <- sum(stepsperday_new$daysteps)/length(stepsperday_new$date)
stepsperday_median_new <- median(stepsperday_new$daysteps)
print(stepsperday_mean_new)
print(stepsperday_median_new)
# Chunk 16
activity_new_wd <- cbind(activity_new,weekdays(as.Date(activity_new$date,"%Y-%m-%d")),stringsAsFactors = FALSE)
colnames(activity_new_wd) <- c("steps","date","interval","weekdays")
# Chunk 17
activity_new_wd$weekdays[activity_new_wd$weekdays %in% c("Sunday","Saturday")] <- "weekend"
activity_new_wd$weekdays[activity_new_wd$weekdays %in% c("Monday","Tuesday","Wednesday","Thursday","Friday")] <- "weekday"
avg_steps_interval_new <- aggregate (activity_new_wd$steps,by=list(activity_new_wd$interval,activity_new_wd$weekdays), FUN=mean, na.rm=TRUE)
colnames(avg_steps_interval_new) <- c("interval","weekdays","avg_steps")
View(avg_steps_interval_new)
panel_plot <- ggplot(avg_steps_interval_new, aes(interval, avg_steps)) +
geom_line() + facet_grid(weekdays)
panel_plot <- ggplot(avg_steps_interval_new, aes(interval, avg_steps)) +
geom_line() + facet_grid(~ weekdays)
with(avg_steps_interval_new, coplot(avg_steps ~ interval | weekdays,type="l", xlab="Intervals", ylab="Average Steps Taken"))
panel_plot <- ggplot(avg_steps_interval_new, aes(interval, avg_steps)) +
geom_line() + facet_grid(weekdays ~)
panel_plot <- ggplot(avg_steps_interval_new, aes(interval, avg_steps)) +
geom_line() + facet_grid(weekdays ~.)
panel_plot
getwd()
setwd("./pa2")
install.packages("dplyr")
install.packages("sqldf")
setwd("./pa2")
