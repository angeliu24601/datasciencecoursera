?compose
names <- map_df(list_names$FILE_PATH,
compose(read.table, mutate),
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactor = FALSE,
YEAR = list_names$YEAR)
names <- map_df(list_names$FILE_PATH,
read.table,
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactor = FALSE,
YEAR = list_names$YEAR)
names <- map_df(list_names$FILE_PATH,
read.table,
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactor = FALSE)
View(names)
View(list_names)
?file.info
tst <- read.table(list_names$FILE_PATH[1,],
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactor = FALSE,
row.names = list_names$YEAR[1,])
tst <- read.table(list_names$FILE_PATH[1],
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactor = FALSE,
row.names = list_names$YEAR[1])
list_names$YEAR[1]
?read.table
tst <- read.table(list_names$FILE_PATH[1],
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactor = FALSE,
row.names = list_names$YEAR[1])
tst <- read.table(list_names$FILE_PATH[1],
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactor = FALSE,
row.names = list_names$YEAR[1])
tst <- read.table(list_names$FILE_PATH[1],
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactor = FALSE)
View(tst)
tst <- read.table(list_names$FILE_PATH[1],
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactor = FALSE,
row.names = rep(list_names$YEAR[1], 2000))
compose(read.table, mutate)
names <- map(list_names$FILE_PATH,
read.table,
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactor = FALSE) %>%
map(mutate, YEAR = list_names$YEAR)
names <- map(list_names$FILE_PATH,
read.table,
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactor = FALSE) %>%
map(mutate, YEAR = 1)
map(list_names$YEAR, "[")
map_char(list_names$YEAR, "[")
map_chr(list_names$YEAR, "[")
names <- map(list_names$FILE_PATH,
read.table,
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactor = FALSE) %>%
map(mutate, YEAR = map(list_names$YEAR, "["))
?file.info
seq_along(list_names$FILE_PATH
seq_along(list_names$FILE_PATH)
import_names <- function(path, pattern){
list_names <- list.files(path,
pattern = pattern, recursive = TRUE,
full.names = TRUE) %>%
data.frame(FILE_PATH = ., stringsAsFactors = FALSE) %>%
mutate(YEAR = gsub("[^0-9]", "", .$FILE_PATH))
names <-data.frame()
for (i in seq_along(list_names$FILE_PATH)) {
names0 <- read.table(list_names$FILE_PATH[i],
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE)
names0$YEAR <- list_names$YEAR[i]
}
names <- rbind(names, names0)
}
names <- import_names(path = "./data_inputs/names",
pattern = "txt")
View(names)
import_names <- function(path, pattern){
list_names <- list.files(path,
pattern = pattern, recursive = TRUE,
full.names = TRUE) %>%
data.frame(FILE_PATH = ., stringsAsFactors = FALSE) %>%
mutate(YEAR = gsub("[^0-9]", "", .$FILE_PATH))
names <-data.frame()
for (i in seq_along(list_names$FILE_PATH)) {
names0 <- read.table(list_names$FILE_PATH[i],
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE)
names0$YEAR <- list_names$YEAR[i]
names0
}
names <- rbind(names, names0)
}
names <- import_names(path = "./data_inputs/names",
pattern = "txt")
View(names)
import_names <- function(path, pattern){
list_names <- list.files(path,
pattern = pattern, recursive = TRUE,
full.names = TRUE) %>%
data.frame(FILE_PATH = ., stringsAsFactors = FALSE) %>%
mutate(YEAR = gsub("[^0-9]", "", .$FILE_PATH))
names <-data.frame()
for (i in seq_along(list_names$FILE_PATH)) {
names0 <- read.table(list_names$FILE_PATH[i],
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE)
names0$YEAR <- list_names$YEAR[i]
names <- rbind(names, names0)
}
}
names <- import_names(path = "./data_inputs/names",
pattern = "txt")
import_names <- function(path, pattern){
list_names <- list.files(path,
pattern = pattern, recursive = TRUE,
full.names = TRUE) %>%
data.frame(FILE_PATH = ., stringsAsFactors = FALSE) %>%
mutate(YEAR = gsub("[^0-9]", "", .$FILE_PATH))
names <-data.frame()
for (i in seq_along(list_names$FILE_PATH)) {
names0 <- read.table(list_names$FILE_PATH[i],
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE)
names0$YEAR <- list_names$YEAR[i]
names <- rbind(names, names0)
}
names
}
rm(tst)
rm(list_names)
import_names <- function(path, pattern){
list_names <- list.files(path,
pattern = pattern, recursive = TRUE,
full.names = TRUE) %>%
data.frame(FILE_PATH = ., stringsAsFactors = FALSE) %>%
mutate(YEAR = gsub("[^0-9]", "", .$FILE_PATH))
names <-data.frame()
for (i in seq_along(list_names$FILE_PATH)) {
names0 <- read.table(list_names$FILE_PATH[i],
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE)
names0$YEAR <- list_names$YEAR[i]
names <- rbind(names, names0)
}
names
}
names <- import_names(path = "./data_inputs/names",
pattern = "txt")
View(names)
saveRDS(names,"./data_outputs/names.Rds")
saveRDS(namesbystate,"./data_outputs/namesbystate.Rds")
View(names)
rm(list = ls())
library(dplyr); library(purrr)
url1 <- "https://www.ssa.gov/oact/babynames/names.zip"
url2 <- "https://www.ssa.gov/oact/babynames/state/namesbystate.zip"
download.file(url1, "./data_inputs/names.zip")
download.file(url2,"./data_inputs/namesbystate.zip")
unzip("./data_inputs/names.zip", exdir = "./data_inputs/names")
unzip("./data_inputs/namesbystate.zip", exdir = "./data_inputs/namesbystate")
import_names <- function(path, pattern){
list_names <- list.files(path,
pattern = pattern, recursive = TRUE,
full.names = TRUE) %>%
data.frame(FILE_PATH = ., stringsAsFactors = FALSE) %>%
mutate(YEAR = gsub("[^0-9]", "", .$FILE_PATH))
names <-data.frame()
for (i in seq_along(list_names$FILE_PATH)) {
names0 <- read.table(list_names$FILE_PATH[i],
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE)
names0$YEAR <- list_names$YEAR[i]
names <- rbind(names, names0)
}
names
}
names <- import_names(path = "./data_inputs/names",
pattern = "txt")
namesbystate <- map_df(list.files("./data_inputs/namesbystate",
pattern = ".TXT",
full.names = TRUE,
recursive = TRUE),
read.table, sep = ",",
stringsAsFactors = FALSE,
col.names = c("STATE", "GENDER",
"YEAR", "NAME", "COUNT"))
saveRDS(names,"./data_outputs/names.Rds")
saveRDS(namesbystate,"./data_outputs/namesbystate.Rds")
rm(list = ls())
file.copy("../data_outputs/names.Rds", "./")
file.copy("./data_outputs/names.Rds", "./")
file.copy("./data_outputs/names.Rds", "./names.Rds")
?file.copy
file.copy("../data_outputs/names.Rds", "./names.Rds")
file.copy("./data_outputs/names.Rds", "./names.Rds")
## Load required packages
library(purrr)
## download baby names data set from Social Security Administration's website
url1 <- "https://www.ssa.gov/oact/babynames/names.zip"
url2 <- "https://www.ssa.gov/oact/babynames/state/namesbystate.zip"
download.file(url1, "./data_inputs/names.zip")
download.file(url2,"./data_inputs/namesbystate.zip")
## unzip downloaded files
unzip("./data_inputs/names.zip", exdir = "./data_inputs/names")
unzip("./data_inputs/namesbystate.zip", exdir = "./data_inputs/namesbystate")
## import data of baby names
### import files at national level. Since the 'year' is not included as a
### variable but in the names of each file, we will need to do
### write a function to do the transformation during the importing process
import_names <- function(path, pattern){
list_names <- list.files(path,
pattern = pattern, recursive = TRUE,
full.names = TRUE) %>%
data.frame(FILE_PATH = ., stringsAsFactors = FALSE) %>%
mutate(YEAR = gsub("[^0-9]", "", .$FILE_PATH))
names <-data.frame()
for (i in seq_along(list_names$FILE_PATH)) {
names0 <- read.table(list_names$FILE_PATH[i],
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE)
names0$YEAR <- list_names$YEAR[i]
names <- rbind(names, names0)
}
names
}
### import the files using the function
names <- import_names(path = "./data_inputs/names",
pattern = "txt")
### import files at states level. This time since all variables are included
### we do not need to write a function to tranform the data
namesbystate <- map_df(list.files("./data_inputs/namesbystate",
pattern = ".TXT",
full.names = TRUE,
recursive = TRUE),
read.table, sep = ",",
stringsAsFactors = FALSE,
col.names = c("STATE", "GENDER",
"YEAR", "NAME", "COUNT"))
## save data sets
saveRDS(names,"./data_outputs/names.Rds")
saveRDS(namesbystate,"./data_outputs/namesbystate.Rds")
## save the data set that will be used to build the shiny app to the
## shiny app folder as well
saveRDS(names,"./shiny/names.Rds")
rm(list = ls())
shiny::runApp('shiny')
import_names <- function(path, pattern){
list_names <- list.files(path,
pattern = pattern, recursive = TRUE,
full.names = TRUE) %>%
data.frame(FILE_PATH = ., stringsAsFactors = FALSE) %>%
mutate(YEAR = gsub("[^0-9]", "", .$FILE_PATH))
names <-data.frame()
for (i in seq_along(list_names$FILE_PATH)) {
names0 <- read.table(list_names$FILE_PATH[i],
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE)
names0$YEAR <- list_names$YEAR[i]
names <- rbind(names, names0)
}
names
}
names <- import_names(path = "./data_inputs/names",
pattern = "txt") %>%
mutate(GENDER = factor(GENDER), YEAR = as.numeric(YEAR))
library(purrr)
names <- import_names(path = "./data_inputs/names",
pattern = "txt") %>%
mutate(GENDER = factor(GENDER), YEAR = as.numeric(YEAR))
library(purrr);library(dplyr)
names <- import_names(path = "./data_inputs/names",
pattern = "txt") %>%
mutate(GENDER = factor(GENDER), YEAR = as.numeric(YEAR))
View(names)
saveRDS(names,"./data_outputs/names.Rds")
saveRDS(names,"./shiny/names.Rds")
library(purrr);library(dplyr)
names <- import_names(path = "./data_inputs/names",
pattern = "txt") %>%
mutate(GENDER = factor(GENDER), YEAR = as.numeric(YEAR)) %>%
select(YEAR, NAME, GENDER, COUNT)
saveRDS(names,"./data_outputs/names.Rds")
saveRDS(names,"./shiny/names.Rds")
class(names$YEAR)
saveRDS(names,"./shiny/names.Rds")
saveRDS(names,"./shiny/names.Rds")
getwd()
rm(list=ls())
library(purrr);library(dplyr)
list_names <- list.files(path,
pattern = pattern, recursive = TRUE,
full.names = TRUE) %>%
data.frame(FILE_PATH = ., stringsAsFactors = FALSE) %>%
mutate(YEAR = gsub("[^0-9]", "", .$FILE_PATH))
list_names <- list.files("./data_inputs/names",
pattern = "txt", recursive = TRUE,
full.names = TRUE) %>%
data.frame(FILE_PATH = ., stringsAsFactors = FALSE) %>%
mutate(YEAR = gsub("[^0-9]", "", .$FILE_PATH)
list_names <- list.files("./data_inputs/names",
pattern = "txt", recursive = TRUE,
full.names = TRUE) %>%
data.frame(FILE_PATH = ., stringsAsFactors = FALSE) %>%
mutate(YEAR = gsub("[^0-9]", "", .$FILE_PATH))
View(list_names)
?do
?do.call
names <- map_df(list_names$FILE_PATH,
read.table, sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE) %>%
do.call("mutate", list(list_names$YEAR))
list(list_names$YEAR)
names <- map_df(list_names$FILE_PATH,
read.table, sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE) %>%
invoke(mutate, YEAR, list(list_names$YEAR))
names <- map_df(list_names$FILE_PATH,
read.table, sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE) %>%
invoke(mutate, YEAR = list(list_names$YEAR))
names <- map_df(list_names$FILE_PATH,
read.table, sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE) %>%
invoke("mutate", YEAR = list(list_names$YEAR))
xs <- replicate(5, runif(10), simplify = FALSE)
ws <- replicate(5, rpois(10, 5) + 1, simplify = FALSE)
unlist(Map(weighted.mean, xs, ws))
rm(ws)
rm(xs)
do.call(paste, list(as.name("A"), as.name("B")), quote = TRUE)
library(purrr);library(dplyr)
?mutate_each
names <- map_df(list_names$FILE_PATH,
read.table, sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE) %>%
invoke(mutate, YEAR = list(list_names$YEAR))
names <- map_df(list_names$FILE_PATH,
read.table, sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE) %>%
invoke(mutate_, YEAR = list(list_names$YEAR))
data("iris")
x <- lapply(iris, class)
c(x)
do.call(c, x)
unlist(x)
x
names <- map(list_names$FILE_PATH,
read.table, sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE)
unlist(names)
rm(list = ls())
library(slidify)
author("mydeck")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
slidify("index.Rmd")
list.files(./data_inputs/names)
list.files("./data_inputs/names")
list_names <- list.files("./data_inputs/names", pattern = "txt") %>% data.frame()
suppressMessages(library(dplyr));library(slidify)
list_names <- list.files("./data_inputs/names", pattern = "txt") %>% data.frame()
mutate(YEAR = as.numeric(gsub("[^0-9]", "", .$FILE_PATH)))
View(list_names)
list_names <- list.files("./data_inputs/names", pattern = "txt") %>% data.frame(FILE_PATH = .) %>%
mutate(YEAR = as.numeric(gsub("[^0-9]", "", .$FILE_PATH)))
View(list_names)
list_names <- list.files("./data_inputs/names", pattern = "txt", full.names = TRUE) %>%
data.frame(FILE_PATH = .) %>%
mutate(YEAR = as.numeric(gsub("[^0-9]", "", .$FILE_PATH)))
## import the data and add the 'year' as an additional variable
names <-data.frame()
for (i in seq_along(list_names$FILE_PATH)) {
names0 <- read.table(list_names$FILE_PATH[i], sep = ",",
col.names = c("NAME", "GENDER", "COUNT"))
names0$YEAR <- list_names$YEAR[i]
names <- rbind(names, names0)
}
View(list_names)
list_names$FILE_PATH
list_names <- list.files("./data_inputs/names", stringsAsFactors = FALSE,
pattern = "txt", full.names = TRUE) %>%
data.frame(FILE_PATH = .) %>%
mutate(YEAR = as.numeric(gsub("[^0-9]", "", .$FILE_PATH)))
list_names <- list.files("./data_inputs/names",
pattern = "txt", full.names = TRUE) %>%
data.frame(FILE_PATH = ., stringsAsFactors = FALSE) %>%
mutate(YEAR = as.numeric(gsub("[^0-9]", "", .$FILE_PATH)))
View(list_names)
names <-data.frame()
for (i in seq_along(list_names$FILE_PATH)) {
names0 <- read.table(list_names$FILE_PATH[i], sep = ",",
col.names = c("NAME", "GENDER", "COUNT"))
names0$YEAR <- list_names$YEAR[i]
names <- rbind(names, names0)
}
View(names)
enter_name <- "Eva"; year_range <- c(1880, 2015)
filtered_data <- filter(names, NAME == enter_name, YEAR >= year_range[1], YEAR <= year_range[2])
View(filtered_data)
View(filtered_data)
filtered_data <- filter(names, NAME == enter_name, YEAR >= year_range[1], YEAR <= year_range[2]) %>%
group(NAME, YEAR) %>% summarise(COUNT = sum(COUNT))
View(filtered_data)
filtered_data <- filter(names, NAME == enter_name, YEAR >= year_range[1], YEAR <= year_range[2]) %>%
group_by(NAME, YEAR) %>% summarise(COUNT = sum(COUNT))
View(list_names)
View(filtered_data)
ggplot(filtered_data, aes(x = YEAR, y = COUNT)) +
geom_line()
suppressMessages(library(dplyr));library(slidify);library(ggplot2)
ggplot(filtered_data, aes(x = YEAR, y = COUNT)) +
geom_line()
## select name and years to view the trend
enter_name <- "Eva"; year_range <- c(1880, 2015)
filtered_data <- filter(names, NAME == enter_name, YEAR >= year_range[1], YEAR <= year_range[2]) %>%
group_by(NAME, YEAR) %>% summarise(COUNT = sum(COUNT))
## visualize the trend
ggplot(filtered_data, aes(x = YEAR, y = COUNT)) +
geom_line()
ggplot(filtered_data, aes(x = YEAR, y = COUNT)) +
geom_line() + scale_x_continuous(minor_breaks = seq(year_range[1], year_range[2], by = 5))
## select name and years to view the trend
enter_name <- "Eva"; year_range <- c(1880, 2015)
filtered_data <- filter(names, NAME == enter_name, YEAR >= year_range[1],
YEAR <= year_range[2]) %>%
group_by(NAME, YEAR) %>% summarise(COUNT = sum(COUNT))
## visualize the trend
ggplot(filtered_data, aes(x = YEAR, y = COUNT)) + geom_line()
## select name and years to view the trend
enter_name <- "Eva"; year_range <- c(1880, 2015)
filtered_data <- filter(names, NAME == enter_name, YEAR >= year_range[1],
YEAR <= year_range[2]) %>%
group_by(NAME, YEAR) %>% summarise(COUNT = sum(COUNT))
## visualize the trend
ggplot(filtered_data, aes(x = YEAR, y = COUNT)) + geom_line()
## select name and years to view the trend
enter_name <- "Eva"; year_range <- c(1880, 2015)
filtered_data <- filter(names, NAME == enter_name, YEAR >= year_range[1],
YEAR <= year_range[2]) %>%
group_by(NAME, YEAR) %>% summarise(COUNT = sum(COUNT))
## visualize the trend
ggplot(filtered_data, aes(x = YEAR, y = COUNT)) + geom_line() +
labs(title = paste0("Poplularity of the name ", enter_name," between ", year_range[1], " and ", year_range[2]),
ylab = paste0("Number of babies named ", enter_name))
## select name and years to view the trend
enter_name <- "Eva"; year_range <- c(1880, 2015)
filtered_data <- filter(names, NAME == enter_name, YEAR >= year_range[1],
YEAR <= year_range[2]) %>%
group_by(NAME, YEAR) %>% summarise(COUNT = sum(COUNT))
## visualize the trend
ggplot(filtered_data, aes(x = YEAR, y = COUNT)) + geom_line() +
labs(title = paste0("Poplularity of the name ", enter_name," between ", year_range[1], " and ", year_range[2]),
ylab = paste0("Number of babies named ", enter_name))
?labs
## select name and years to view the trend
enter_name <- "Eva"; year_range <- c(1880, 2015)
filtered_data <- filter(names, NAME == enter_name, YEAR >= year_range[1],
YEAR <= year_range[2]) %>%
group_by(NAME, YEAR) %>% summarise(COUNT = sum(COUNT))
## visualize the trend
ggplot(filtered_data, aes(x = YEAR, y = COUNT)) + geom_line() +
labs(title = paste0("Poplularity of the name \'", enter_name,"' between ", year_range[1], " and ", year_range[2]),
y = paste0("Number of babies named ", enter_name))
## select name and years to view the trend
enter_name <- "Eva"; year_range <- c(1880, 2015)
filtered_data <- filter(names, NAME == enter_name, YEAR >= year_range[1],
YEAR <= year_range[2]) %>%
group_by(NAME, YEAR) %>% summarise(COUNT = sum(COUNT))
## visualize the trend
ggplot(filtered_data, aes(x = YEAR, y = COUNT)) + geom_line() +
scale_x_continuous(minor_breaks = seq(year_range[1],year_range[2], by = 1)) +
labs(title = paste0("Poplularity of the name \'", enter_name,"' between ", year_range[1],
" and ", year_range[2]),
y = paste0("Number of babies named ", enter_name))
