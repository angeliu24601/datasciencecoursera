get_data <- function(data, name, years, gender = "MF"){
filtered_data <- data %>%
filter(NAME == name, YEAR >= years[1] & YEAR <= years[2])
if (gender == "M" | gender == "F"){
filtered_data <- filtered_data %>%
filter(GENDER == gender)
} else if (gender == "MF"){
filtered_data <- filtered_data %>%
group_by(YEAR, NAME) %>%
summarise(COUNT = sum(COUNT))
} else stop ("Bad argument to gender: must be 'M', 'F', or 'MF'")
filtered_data
if(setequal(seq(min(filtered_data$YEAR), max(filtered_data$YEAR)),
filtered_data$YEAR) == FALSE) {
# fill in zero if there are years missing
fill_missing <- data_frame(YEAR = setdiff(seq(min(filtered_data$YEAR),
max(filtered_data$YEAR)),
filtered_data$YEAR),
COUNT = 0)
filtered_data <- rbind(filtered_data, fill_missing) %>%
arrange(YEAR)
}
filtered_data
}
library(shiny); library(dygraphs); library(htmlwidgets); library(dplyr)
baby_names <- readRDS("./names.Rds")
name_data <- baby_names %>%
get_data(name = "Eva",
gender = "MF",
years = c(1880, 2015))
get_data <- function(data, name, years, gender = "MF"){
filtered_data <- data %>%
filter(NAME == name, YEAR >= years[1] & YEAR <= years[2])
if (gender == "M" | gender == "F"){
filtered_data <- filtered_data %>%
filter(GENDER == gender) %>%
select(YEAR, COUNT)
} else if (gender == "MF"){
filtered_data <- filtered_data %>%
group_by(YEAR, NAME) %>%
summarise(COUNT = sum(COUNT)) %>%
select(YEAR, COUNT)
} else stop ("Bad argument to gender: must be 'M', 'F', or 'MF'")
filtered_data
if(setequal(seq(min(filtered_data$YEAR), max(filtered_data$YEAR)),
filtered_data$YEAR) == FALSE) {
# fill in zero if there are years missing
fill_missing <- data_frame(YEAR = setdiff(seq(min(filtered_data$YEAR),
max(filtered_data$YEAR)),
filtered_data$YEAR),
COUNT = 0)
filtered_data <- rbind(filtered_data, fill_missing) %>%
arrange(YEAR)
}
filtered_data
}
name_data <- baby_names %>%
get_data(name = "Eva",
gender = "MF",
years = c(1880, 2015))
name_data <- baby_names %>%
get_data(name = "Eva",
gender = "F",
years = c(1880, 2015))
get_data <- function(data, name, years, gender = "MF"){
filtered_data <- data %>%
filter(NAME == name, YEAR >= years[1] & YEAR <= years[2])
if (gender == "M" | gender == "F"){
filtered_data <- filtered_data %>%
filter(GENDER == gender) %>%
select(YEAR, COUNT)
} else if (gender == "MF"){
filtered_data <- filtered_data %>%
group_by(YEAR, NAME) %>%
summarise(COUNT = sum(COUNT)) %>%
select(YEAR, COUNT) %>% ungroup
} else stop ("Bad argument to gender: must be 'M', 'F', or 'MF'")
filtered_data
if(setequal(seq(min(filtered_data$YEAR), max(filtered_data$YEAR)),
filtered_data$YEAR) == FALSE) {
# fill in zero if there are years missing
fill_missing <- data_frame(YEAR = setdiff(seq(min(filtered_data$YEAR),
max(filtered_data$YEAR)),
filtered_data$YEAR),
COUNT = 0)
filtered_data <- rbind(filtered_data, fill_missing) %>%
arrange(YEAR)
}
get_data <- function(data, name, years, gender = "MF"){
filtered_data <- data %>%
filter(NAME == name, YEAR >= years[1] & YEAR <= years[2])
if (gender == "M" | gender == "F"){
filtered_data <- filtered_data %>%
filter(GENDER == gender) %>%
select(YEAR, COUNT)
} else if (gender == "MF"){
filtered_data <- filtered_data %>%
group_by(YEAR, NAME) %>%
summarise(COUNT = sum(COUNT)) %>%
select(YEAR, COUNT) %>% ungroup
} else stop ("Bad argument to gender: must be 'M', 'F', or 'MF'")
filtered_data
if(setequal(seq(min(filtered_data$YEAR), max(filtered_data$YEAR)),
filtered_data$YEAR) == FALSE) {
# fill in zero if there are years missing
fill_missing <- data_frame(YEAR = setdiff(seq(min(filtered_data$YEAR),
max(filtered_data$YEAR)),
filtered_data$YEAR),
COUNT = 0)
filtered_data <- rbind(filtered_data, fill_missing) %>%
arrange(YEAR)
}
filtered_data
}
get_data <- function(data, name, years, gender = "MF"){
filtered_data <- data %>%
filter(NAME == name, YEAR >= years[1] & YEAR <= years[2])
if (gender == "M" | gender == "F"){
filtered_data <- filtered_data %>%
filter(GENDER == gender) %>%
select(YEAR, COUNT)
} else if (gender == "MF"){
filtered_data <- filtered_data %>%
group_by(YEAR, NAME) %>%
summarise(COUNT = sum(COUNT)) %>%
select(YEAR, COUNT) %>% ungroup
} else stop ("Bad argument to gender: must be 'M', 'F', or 'MF'")
filtered_data
if(setequal(seq(min(filtered_data$YEAR), max(filtered_data$YEAR)),
filtered_data$YEAR) == FALSE) {
# fill in zero if there are years missing
fill_missing <- data_frame(YEAR = setdiff(seq(min(filtered_data$YEAR),
max(filtered_data$YEAR)),
filtered_data$YEAR),
COUNT = 0)
filtered_data <- rbind(filtered_data, fill_missing) %>%
arrange(YEAR)
}
filtered_data
}
name_data <- baby_names %>%
get_data(name = "Eva",
gender = "F",
years = c(1880, 2015))
filtered_data <- baby_names %>% filter(NAME = "Eva", GENDER = "MF", YEAR >= 1880, YEAR <= 2015)
filtered_data <- baby_names %>% filter(NAME == "Eva", GENDER == "MF", YEAR >= 1880, YEAR <= 2015)
filtered_data <- baby_names %>% filter(NAME == "Eva", GENDER == "MF", YEAR >= 1880, YEAR <= 2015) %>%
group_by(YEAR, NAME) %>%
summarise(COUNT = sum(COUNT)) %>%
select(YEAR, COUNT) %>% ungroup
View(filtered_data)
filtered_data <- baby_names %>% filter(NAME == "Eva", GENDER == "MF", YEAR >= 1880, YEAR <= 2015) %>%
group_by(YEAR, NAME)
filtered_data <- baby_names %>% filter(NAME == "Eva", YEAR >= 1880, YEAR <= 2015) %>%
group_by(YEAR, NAME) %>%
summarise(COUNT = sum(COUNT)) %>%
select(YEAR, COUNT) %>% ungroup
setequal(seq(min(filtered_data$YEAR), max(filtered_data$YEAR)),filtered_data$YEAR)
min(filtered_data$YEAR)
max(filtered_data$YEAR)
seq(min(filtered_data$YEAR), max(filtered_data$YEAR))
seq(min(filtered_data$YEAR), max(filtered_data$YEAR))
setequal(seq(min(filtered_data$YEAR), max(filtered_data$YEAR)),filtered_data$YEAR)
min(filtered_data$YEAR)
max(filtered_data$YEAR)
class(baby_names$YEAR)
baby_names <- readRDS("./names.Rds")
class(baby_names$YEAR)
baby_names <- readRDS("./names.Rds")
class(baby_names$YEAR)
baby_names <- readRDS("./names.Rds")
class(baby_names$YEAR)
rm(baby_names)
getwd()
