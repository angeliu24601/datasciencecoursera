shiny::runApp()
runApp()
runApp()
runApp()
runApp()
baby_names <- readRDS("./names.Rds")
View(baby_names)
runApp()
View(baby_names)
runApp()
runApp()
browser()
name_ts <- ts(name_data[,-4], start = min(name_data$YEAR),
frequency = 1)
quit
class(baby_names$YEAR)
rm(list=ls())
names <- import_names(path = "./data_inputs/names",
pattern = "txt") %>%
mutate(GENDER = factor(GENDER), YEAR = as.numeric(YEAR))
import_names <- function(path, pattern){
list_names <- list.files(path,
pattern = pattern, recursive = TRUE,
full.names = TRUE) %>%
data.frame(FILE_PATH = ., stringsAsFactors = FALSE) %>%
mutate(YEAR = gsub("[^0-9]", "", .$FILE_PATH))
names <-data.frame()
for (i in seq_along(list_names$FILE_PATH)) {
names0 <- read.table(list_names$FILE_PATH[i],
sep = ",",
col.names = c("NAME", "GENDER", "COUNT"),
stringsAsFactors = FALSE)
names0$YEAR <- list_names$YEAR[i]
names <- rbind(names, names0)
}
names
}
names <- import_names(path = "./data_inputs/names",
pattern = "txt") %>%
mutate(GENDER = factor(GENDER), YEAR = as.numeric(YEAR))
names <- import_names(path = "./data_inputs/names",
pattern = "txt")
shiny::runApp()
runApp()
runApp()
baby_names <- readRDS("./names.Rds")
runApp()
runApp()
get_data <- function(data, name, years, gender = "MF", aggregate = "no"){
filtered_data <- data %>%
filter(NAME == name, YEAR >= years[1] & YEAR <= years[2])
if (gender == "M" | gender == "F"){
filtered_data <- filtered_data %>%
filter(GENDER == gender)
} else if (gender == "MF"){
filtered_data <- filtered_data %>%
group_by(NAME, YEAR) %>%
summarise(COUNT = sum())
} else stop ("Bad argument to gender: must be 'M', 'F', or 'MF'")
filtered_data
}
name_data <- get_data(name = "Eva", gender = "MF", years = c(1880, 2015),aggregate = "no")
name_data <- get_data(baby_names,name = "Eva", gender = "MF", years = c(1880, 2015),aggregate = "no")
View(name_data)
name_data <- get_data(baby_names,name = "Eva", gender = "F", years = c(1880, 2015),aggregate = "no")
View(name_data)
name_data <- get_data(baby_names,name = "Eva", gender = "MF", years = c(1880, 2015),aggregate = "no")
library(shiny); library(dygraphs); library(htmlwidgets); library(dplyr)
name_data <- get_data(baby_names,name = "Eva", gender = "MF", years = c(1880, 2015),aggregate = "no")
name_data <- baby_names %>%
mutate(COUNT = as.numeric(COUNT)) %>%
get_data(name = "Eva", gender = "MF", years = c(1880, 2015),aggregate = "no")
View(name_data)
get_data <- function(data, name, years, gender = "MF", aggregate = "no"){
filtered_data <- data %>%
filter(NAME == name, YEAR >= years[1] & YEAR <= years[2])
if (gender == "M" | gender == "F"){
filtered_data <- filtered_data %>%
filter(GENDER == gender)
} else if (gender == "MF"){
filtered_data <- filtered_data %>%
group_by(NAME, YEAR) %>%
summarise(COUNT = sum(COUNT))
} else stop ("Bad argument to gender: must be 'M', 'F', or 'MF'")
filtered_data
}
name_data <- baby_names %>%
mutate(COUNT = as.numeric(COUNT)) %>%
get_data(name = "Eva", gender = "MF", years = c(1880, 2015),aggregate = "no")
name_data <- baby_names %>%
get_data(name = "Eva", gender = "MF", years = c(1880, 2015),aggregate = "no")
shiny::runApp()
rm(list=ls())
runApp()
runApp()
runApp()
baby_names <- readRDS("./names.Rds")
get_data <- function(data, name, years, gender = "MF", aggregate = "no"){
filtered_data <- data %>%
filter(NAME == name, YEAR >= years[1] & YEAR <= years[2])
if (gender == "M" | gender == "F"){
filtered_data <- filtered_data %>%
filter(GENDER == gender)
} else if (gender == "MF"){
filtered_data <- filtered_data %>%
group_by(YEAR, NAME) %>%
summarise(COUNT = sum(COUNT))
} else stop ("Bad argument to gender: must be 'M', 'F', or 'MF'")
filtered_data
name_data <- baby_names %>%
get_data(name = "Eva",
gender = "MF",
years = c(1880, 2015),
aggregate = "no")
name_data <- baby_names %>%
get_data(name = "Eva",
gender = "MF",
years = c(1880, 2015),
aggregate = "no")
get_data <- function(data, name, years, gender = "MF", aggregate = "no"){
filtered_data <- data %>%
filter(NAME == name, YEAR >= years[1] & YEAR <= years[2])
if (gender == "M" | gender == "F"){
filtered_data <- filtered_data %>%
filter(GENDER == gender)
} else if (gender == "MF"){
filtered_data <- filtered_data %>%
group_by(YEAR, NAME) %>%
summarise(COUNT = sum(COUNT))
} else stop ("Bad argument to gender: must be 'M', 'F', or 'MF'")
filtered_data
}
name_data <- baby_names %>%
get_data(name = "Eva",
gender = "MF",
years = c(1880, 2015),
aggregate = "no")
name_ts <- ts(name_data[,-1], start = min(name_data$YEAR),
frequency = 1)
name_data <- baby_names %>%
get_data(name = "Eva",
gender = "MF",
years = c(1880, 2015),
aggregate = "no")
name_ts <- ts(name_data[,-1], start = min(name_data$YEAR),
frequency = 1)
library(shiny); library(dygraphs); library(htmlwidgets); library(dplyr)
baby_names <- readRDS("./names.Rds")
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
publish(user = "angeliu24601", repo = "coursera-data-products")
